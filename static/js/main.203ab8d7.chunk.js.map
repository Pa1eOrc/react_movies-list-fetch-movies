{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setFoundMovie","useState","isError","setIsError","searchInputValue","setSearchInputValue","newMovie","setNewMovie","isLoading","setIsLoading","handleFormSubmit","e","a","preventDefault","query","trim","fetch","then","res","json","catch","Response","Error","result","movieData","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","disabled","App","setMovies","foundMovie","useEffect","every","ReactDOM","render","document","getElementById"],"mappings":"+TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,6CCJnB,IAOaC,EAA6B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3C,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAgCJ,mBAAuB,MAAvD,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAOMC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACvBD,EAAEE,iBACFJ,GAAa,GAFU,kBCvBFK,ED6BjBV,EAAiBW,OC5BhBC,MAAM,GAAD,OAHE,2CAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDkBc,OASjB,aAJEC,EALe,SAS2B,UAApBA,EAAOF,SACjClB,GAAW,IAEXA,GAAW,GAEP,UAAWoB,IACPC,EAAmB,CACvBjC,MAAOgC,EAAOE,MACdjC,YAAa+B,EAAOG,KACpBrC,OAAQkC,EAAOI,QACM,QAAlBJ,EAAOI,OAAmBJ,EAAOI,OApC7B,4DAqCPjC,QAAQ,GAAD,OAtCF,6BAsCE,YAAiB6B,EAAOK,QAC/B9B,OAAQyB,EAAOK,QAGjBrB,EAAYiB,KAxBK,gDA4BrBrB,GAAW,GA5BU,yBA8BrBM,GAAa,GA9BQ,+CCvBpB,IAAkBK,IDuBE,0BAAH,sDA0CtB,OACE,qCACE,uBACE3B,UAAU,aACV0C,SAAUnB,EAFZ,UAIE,sBAAKvB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2C,QAAQ,cAAjC,yBAIA,qBAAK3C,UAAU,UAAf,SACE,uBACE,UAAQ,aACR4C,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9C,UAAW+C,IAAW,QAAS,CAAE,YAAahC,IAC9CiC,MAAO/B,EACPgC,SAlEc,SAACzB,GACzBN,EAAoBM,EAAE0B,OAAOF,OAC7BhC,GAAW,QAoEJD,GACC,mBAAGf,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR4C,KAAK,SACL5C,UAAW+C,IACT,SAAU,WAAY,CAAE,aAAc1B,IAExC8B,QAAS5B,EACT6B,SAA+B,KAArBnC,EAPZ,SASIE,EAGA,eAFA,mBAOLA,GACC,qBAAKnB,UAAU,UAAf,SACE,wBACE,UAAQ,YACR4C,KAAK,SACL5C,UAAU,oBACVmD,QA/DS,WACjBhC,IACFN,EAAcM,GACdD,EAAoB,IACpBE,EAAY,QAuDJ,qCAaPD,GACC,sBAAKnB,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOoB,WEnIfkC,EAAM,WACjB,MAA4BvC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe6C,EAAf,KACA,EAAoCxC,mBAAuB,MAA3D,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAUA,OARA2C,qBAAU,WACJD,GAAc9C,EAAOgD,OACvB,SAAA1D,GAAK,OAAIwD,EAAW5C,SAAWZ,EAAMY,WAErC2C,EAAU,GAAD,mBAAK7C,GAAL,CAAa8C,OAEvB,CAACA,IAGF,sBAAKvD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,cAAeA,UCtBzB6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.203ab8d7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\n\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\nconst imdbLink = 'https://www.imdb.com/title';\nconst defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  setFoundMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ setFoundMovie }) => {\n  const [isError, setIsError] = useState(false);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchInputValue(e.target.value);\n    setIsError(false);\n  };\n\n  const handleFormSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const result: MovieData | ResponseError = await getMovie(\n        searchInputValue.trim(),\n      );\n\n      if ('Response' in result && result.Response === 'False') {\n        setIsError(true);\n      } else {\n        setIsError(false);\n\n        if ('Title' in result) {\n          const movieData: Movie = {\n            title: result.Title,\n            description: result.Plot,\n            imgUrl: result.Poster\n            && result.Poster !== 'N/A' ? result.Poster : defaultImg,\n            imdbUrl: `${imdbLink}/${result.imdbID}`,\n            imdbId: result.imdbID,\n          };\n\n          setNewMovie(movieData);\n        }\n      }\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleMovieAdd = () => {\n    if (newMovie) {\n      setFoundMovie(newMovie);\n      setSearchInputValue('');\n      setNewMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isError })}\n              value={searchInputValue}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button', 'is-light', { 'is-loading': isLoading },\n              )}\n              onClick={handleFormSubmit}\n              disabled={searchInputValue === ''}\n            >\n              {!newMovie ? (\n                'Find a movie'\n              ) : (\n                'Search again'\n              )}\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=dbfa1d8e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  useEffect(() => {\n    if (foundMovie && movies.every(\n      movie => foundMovie.imdbId !== movie.imdbId,\n    )) {\n      setMovies([...movies, foundMovie]);\n    }\n  }, [foundMovie]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setFoundMovie={setFoundMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}